import { TanStackDBError } from '@tanstack/db';
export declare class QueryCollectionError extends TanStackDBError {
    constructor(message: string);
}
export declare class QueryKeyRequiredError extends QueryCollectionError {
    constructor();
}
export declare class QueryFnRequiredError extends QueryCollectionError {
    constructor();
}
export declare class QueryClientRequiredError extends QueryCollectionError {
    constructor();
}
export declare class GetKeyRequiredError extends QueryCollectionError {
    constructor();
}
export declare class SyncNotInitializedError extends QueryCollectionError {
    constructor();
}
export declare class InvalidItemStructureError extends QueryCollectionError {
    constructor(message: string);
}
export declare class ItemNotFoundError extends QueryCollectionError {
    constructor(key: string | number);
}
export declare class DuplicateKeyInBatchError extends QueryCollectionError {
    constructor(key: string | number);
}
export declare class UpdateOperationItemNotFoundError extends QueryCollectionError {
    constructor(key: string | number);
}
export declare class DeleteOperationItemNotFoundError extends QueryCollectionError {
    constructor(key: string | number);
}
export declare class InvalidSyncOperationError extends QueryCollectionError {
    constructor(message: string);
}
export declare class UnknownOperationTypeError extends QueryCollectionError {
    constructor(type: string);
}
export declare class MissingKeyFieldError extends QueryCollectionError {
    constructor(operation: string, message: string);
}
