import { CollectionImpl, createCollection } from "./collection.js";
import { SortedMap } from "./SortedMap.js";
import { createTransaction, getActiveTransaction } from "./transactions.js";
import { createArrayChangeProxy, createChangeProxy, withArrayChangeTracking, withChangeTracking } from "./proxy.js";
import { createOptimisticAction } from "./optimistic-action.js";
import { localOnlyCollectionOptions } from "./local-only.js";
import { localStorageCollectionOptions } from "./local-storage.js";
import { AggregateFunctionNotInSelectError, CannotCombineEmptyExpressionListError, CollectionConfigurationError, CollectionInErrorStateError, CollectionInputNotFoundError, CollectionIsInErrorStateError, CollectionOperationError, CollectionRequiresConfigError, CollectionRequiresSyncConfigError, CollectionStateError, DeleteKeyNotFoundError, DistinctRequiresSelectError, DuplicateKeyError, DuplicateKeySyncError, EmptyReferencePathError, GroupByError, HavingRequiresGroupByError, InvalidCollectionStatusTransitionError, InvalidJoinConditionSameTableError, InvalidJoinConditionTableMismatchError, InvalidJoinConditionWrongTablesError, InvalidSchemaError, InvalidSourceError, InvalidStorageDataFormatError, InvalidStorageObjectFormatError, JoinConditionMustBeEqualityError, JoinError, KeyUpdateNotAllowedError, LimitOffsetRequireOrderByError, LocalStorageCollectionError, MissingDeleteHandlerError, MissingHandlerError, MissingInsertHandlerError, MissingMutationFunctionError, MissingUpdateArgumentError, MissingUpdateHandlerError, NegativeActiveSubscribersError, NoKeysPassedToDeleteError, NoKeysPassedToUpdateError, NoPendingSyncTransactionCommitError, NoPendingSyncTransactionWriteError, NoStorageAvailableError, NoStorageEventApiError, NonAggregateExpressionNotInGroupByError, NonRetriableError, OnlyOneSourceAllowedError, QueryBuilderError, QueryCompilationError, QueryMustHaveFromClauseError, QueryOptimizerError, SchemaMustBeSynchronousError, SchemaValidationError, SerializationError, StorageError, StorageKeyRequiredError, SubQueryMustHaveFromClauseError, SyncCleanupError, SyncTransactionAlreadyCommittedError, SyncTransactionAlreadyCommittedWriteError, TanStackDBError, TransactionAlreadyCompletedRollbackError, TransactionError, TransactionNotPendingCommitError, TransactionNotPendingMutateError, UndefinedKeyError, UnknownExpressionTypeError, UnknownFunctionError, UnknownHavingExpressionTypeError, UnsupportedAggregateFunctionError, UnsupportedFromTypeError, UnsupportedJoinSourceTypeError, UnsupportedJoinTypeError, UpdateKeyNotFoundError } from "./errors.js";
import { BaseIndex, IndexOperation } from "./indexes/base-index.js";
import { BTreeIndex } from "./indexes/btree-index.js";
import { IndexProxy, LazyIndexWrapper } from "./indexes/lazy-index.js";
import { BaseQueryBuilder, Query } from "./query/builder/index.js";
import { add, and, avg, coalesce, concat, count, eq, gt, gte, ilike, inArray, length, like, lower, lt, lte, max, min, not, or, sum, upper } from "./query/builder/functions.js";
import { compileQuery } from "./query/compiler/index.js";
import { createLiveQueryCollection, liveQueryCollectionOptions } from "./query/live-query-collection.js";
export {
  AggregateFunctionNotInSelectError,
  BTreeIndex,
  BaseIndex,
  BaseQueryBuilder,
  CannotCombineEmptyExpressionListError,
  CollectionConfigurationError,
  CollectionImpl,
  CollectionInErrorStateError,
  CollectionInputNotFoundError,
  CollectionIsInErrorStateError,
  CollectionOperationError,
  CollectionRequiresConfigError,
  CollectionRequiresSyncConfigError,
  CollectionStateError,
  DeleteKeyNotFoundError,
  DistinctRequiresSelectError,
  DuplicateKeyError,
  DuplicateKeySyncError,
  EmptyReferencePathError,
  GroupByError,
  HavingRequiresGroupByError,
  IndexOperation,
  IndexProxy,
  InvalidCollectionStatusTransitionError,
  InvalidJoinConditionSameTableError,
  InvalidJoinConditionTableMismatchError,
  InvalidJoinConditionWrongTablesError,
  InvalidSchemaError,
  InvalidSourceError,
  InvalidStorageDataFormatError,
  InvalidStorageObjectFormatError,
  JoinConditionMustBeEqualityError,
  JoinError,
  KeyUpdateNotAllowedError,
  LazyIndexWrapper,
  LimitOffsetRequireOrderByError,
  LocalStorageCollectionError,
  MissingDeleteHandlerError,
  MissingHandlerError,
  MissingInsertHandlerError,
  MissingMutationFunctionError,
  MissingUpdateArgumentError,
  MissingUpdateHandlerError,
  NegativeActiveSubscribersError,
  NoKeysPassedToDeleteError,
  NoKeysPassedToUpdateError,
  NoPendingSyncTransactionCommitError,
  NoPendingSyncTransactionWriteError,
  NoStorageAvailableError,
  NoStorageEventApiError,
  NonAggregateExpressionNotInGroupByError,
  NonRetriableError,
  OnlyOneSourceAllowedError,
  Query,
  QueryBuilderError,
  QueryCompilationError,
  QueryMustHaveFromClauseError,
  QueryOptimizerError,
  SchemaMustBeSynchronousError,
  SchemaValidationError,
  SerializationError,
  SortedMap,
  StorageError,
  StorageKeyRequiredError,
  SubQueryMustHaveFromClauseError,
  SyncCleanupError,
  SyncTransactionAlreadyCommittedError,
  SyncTransactionAlreadyCommittedWriteError,
  TanStackDBError,
  TransactionAlreadyCompletedRollbackError,
  TransactionError,
  TransactionNotPendingCommitError,
  TransactionNotPendingMutateError,
  UndefinedKeyError,
  UnknownExpressionTypeError,
  UnknownFunctionError,
  UnknownHavingExpressionTypeError,
  UnsupportedAggregateFunctionError,
  UnsupportedFromTypeError,
  UnsupportedJoinSourceTypeError,
  UnsupportedJoinTypeError,
  UpdateKeyNotFoundError,
  add,
  and,
  avg,
  coalesce,
  compileQuery,
  concat,
  count,
  createArrayChangeProxy,
  createChangeProxy,
  createCollection,
  createLiveQueryCollection,
  createOptimisticAction,
  createTransaction,
  eq,
  getActiveTransaction,
  gt,
  gte,
  ilike,
  inArray,
  length,
  like,
  liveQueryCollectionOptions,
  localOnlyCollectionOptions,
  localStorageCollectionOptions,
  lower,
  lt,
  lte,
  max,
  min,
  not,
  or,
  sum,
  upper,
  withArrayChangeTracking,
  withChangeTracking
};
//# sourceMappingURL=index.js.map
